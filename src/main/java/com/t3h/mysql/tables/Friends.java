/*
 * This file is generated by jOOQ.
*/
package com.t3h.mysql.tables;


import com.t3h.mysql.Doan;
import com.t3h.mysql.Keys;
import com.t3h.mysql.tables.records.FriendsRecord;

import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Friends extends TableImpl<FriendsRecord> {

    private static final long serialVersionUID = 646685521;

    /**
     * The reference instance of <code>doan.friends</code>
     */
    public static final Friends FRIENDS = new Friends();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FriendsRecord> getRecordType() {
        return FriendsRecord.class;
    }

    /**
     * The column <code>doan.friends.user1_id</code>.
     */
    public final TableField<FriendsRecord, String> USER1_ID = createField("user1_id", org.jooq.impl.SQLDataType.VARCHAR.length(15).nullable(false), this, "");

    /**
     * The column <code>doan.friends.user2_id</code>.
     */
    public final TableField<FriendsRecord, String> USER2_ID = createField("user2_id", org.jooq.impl.SQLDataType.VARCHAR.length(15).nullable(false), this, "");

    /**
     * The column <code>doan.friends.time_create</code>.
     */
    public final TableField<FriendsRecord, Date> TIME_CREATE = createField("time_create", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * Create a <code>doan.friends</code> table reference
     */
    public Friends() {
        this("friends", null);
    }

    /**
     * Create an aliased <code>doan.friends</code> table reference
     */
    public Friends(String alias) {
        this(alias, FRIENDS);
    }

    private Friends(String alias, Table<FriendsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Friends(String alias, Table<FriendsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Doan.DOAN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<FriendsRecord> getPrimaryKey() {
        return Keys.KEY_FRIENDS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FriendsRecord>> getKeys() {
        return Arrays.<UniqueKey<FriendsRecord>>asList(Keys.KEY_FRIENDS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<FriendsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<FriendsRecord, ?>>asList(Keys.FK_USER1_FRIEND, Keys.FL_USER2_FRIEND);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Friends as(String alias) {
        return new Friends(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Friends rename(String name) {
        return new Friends(name, null);
    }
}
